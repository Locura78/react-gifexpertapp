{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,wBAAIO,UAAU,2CAAd,wBACA,2BACIC,KAAM,OACNC,MAAUV,EACVW,SAlBc,SAACR,GACvBF,EAAeE,EAAES,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,8DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,yBAAKR,UAAU,8CAEX,yBAAKsB,IAAOd,EAAMe,IAAOL,IACzB,2BAAKA,KCFJM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,UAOtB,ECVwB,SAAEA,GAC1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GAIHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGtB,CAAEnB,IAEEoB,EDT6BK,CAAczB,GAApC0B,EAAd,EAAQnB,KAAgBY,EAAxB,EAAwBA,QAIxB,OACI,oCACI,4BAAMnB,GACJmB,GAAW,uBAAGzB,UAAU,oCAAb,eACb,yBAAKA,UAAU,aAEPgC,EAASjB,KAAK,SAAAC,GAAG,OAEb,kBAAC,EAAD,eACIiB,IAAQjB,EAAIC,IAERD,UExBnBkB,EAAe,WAIxB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,oCACI,wBAAIU,UAAU,uCAAd,kBACA,kBAAC,EAAD,CAAaV,cAAiBA,IAC9B,6BAEA,4BAEQ6C,EAAWpB,KAAK,SAAAT,GAAS,OAErB,kBAAC,EAAD,CACI2B,IAAQ3B,EACRA,UAAcA,U,MCpB1C8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.80d7d731.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );          \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategorias( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <h2 className='animate__animated animate__bounceInLeft'>Agregar Categoría</h2>\r\n            <input \r\n                type ='text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=9&api_key=aYO9iwL4gQBTh3Pr7LoXOt3OydUNA437`;\r\n    // console.log(url);\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    // console.log ( {id,title,url} );\r\n    return (\r\n        <div className='card animate__animated animate__zoomInDown'>\r\n            {/* { imagen.title }; */}\r\n            <img src= { url } alt= { title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import React, { useEffect, useState } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGif';\r\n\r\nexport const GifGrid = ( {categoria}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    // useEffect( () => {\r\n    //     getGifs( categoria )\r\n    //         .then( setImages );\r\n    // }, [ categoria ]);\r\n    const { data: imagenes, loading } = useFetchGifs( categoria );\r\n        \r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>{ categoria }</h3>     \r\n            { loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    imagenes.map( img => (\r\n                        // <li key={ img.id }>{ img.title }</li>\r\n                        <GifGridItem \r\n                            key = { img.id }\r\n                            // imagen = { img }\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n                // setTimeout(()=>{\r\n                    \r\n                // },3000);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [ categoria ]);\r\n\r\n    return state; //  { data: [], loading: true };\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['Futbol 11', 'Fubol 5', 'Futbol Sala'];\r\n    // const [categorias, setCategorias] = useState(['Fútbol 11', 'Fútbol 5', 'Fútbol Sala']);\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategorias([...categorias, 'Fútbol playa']);\r\n    //     // OTRA FORMA\r\n    //     setCategorias( cats => [...cats, 'Fútbol playa']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h1 className='animate__animated animate__backInUp'>Gif Expert App</h1>\r\n            <AddCategory setCategorias= { setCategorias } />\r\n            <hr></hr>\r\n            {/* <button onClick = { handleAdd }>Agregar Categoría</button> */}\r\n            <ol>\r\n                { \r\n                    categorias.map( categoria => \r\n                        // return <li key = { categoria } > { categoria }</li>\r\n                        <GifGrid \r\n                            key = { categoria }\r\n                            categoria = { categoria } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render( \n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}